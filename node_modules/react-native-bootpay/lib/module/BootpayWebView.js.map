{"version":3,"sources":["BootpayWebView.js"],"names":["React","Component","SafeAreaView","Modal","Platform","WebView","UserInfo","BootpayWebView","visibility","script","firstLoad","payload","items","user","extra","application_id","OS","props","ios_application_id","android_application_id","setState","JSON","stringify","updateInfo","removePaymentWindow","e","state","setBootpayPlatform","setAnalyticsData","goBootpayRequest","onError","onCancel","onReady","onConfirm","onClose","nativeEvent","undefined","data","json","action","message","dismiss","parse","onDone","url","injectJavaScript","fullScript","generateScript","wv","uuid","getBootpayUUID","bootpaySK","getBootpaySK","bootLastTime","getBootpayLastTime","elaspedTime","Date","now","componentWillUnmount","setBootpayLastTime","render","injectedJavascript","flex","uri","onLoadEnd","onMessage","onShouldStartLoadWithRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { SafeAreaView, Modal, Platform } from 'react-native'; \nimport WebView  from './WebView'; \nimport UserInfo from './UserInfo'\n\nexport class BootpayWebView extends Component { \n    state = {\n        visibility: false,\n        script: '',\n        firstLoad: false\n    }\n\n    async componentWillUnmount() { \n        this.setState(\n            {\n                visibility: false,\n                script: '',\n                firstLoad: false\n            }\n        )\n        UserInfo.setBootpayLastTime(Date.now());\n    }\n\n    render() { \n\n        const injectedJavascript = `(function() {\n                window.postMessage = function(data) {\n            window.ReactNativeWebView.postMessage(data);\n            };\n        })()`\n\n        return <Modal\n            animationType={'slide'}\n            transparent={false}\n            visible={this.state.visibility}>\n            <SafeAreaView style={{ flex: 1 }}>\n                <WebView\n                    ref={(wv) => this.wv = wv}\n                    useWebKit={true}\n                    originWhitelist={['*']}\n                    source={{\n                        uri: 'https://inapp.bootpay.co.kr/3.3.1/production.html'\n                    }}\n                    javaScriptEnabled={true}\n                    javaScriptCanOpenWindowsAutomatically={true}\n                    scalesPageToFit={true}\n                    onLoadEnd={this.onLoadEnd}\n                    onMessage={this.onMessage}\n                    onShouldStartLoadWithRequest={this.onShouldStartLoadWithRequest}\n                />\n            </SafeAreaView>\n\n        </Modal>\n    }\n\n    request = (payload, items, user, extra) => {\n        payload.application_id =  Platform.OS == 'ios' ? this.props.ios_application_id : this.props.android_application_id;\n        payload.items = items;\n        payload.user = user;\n        payload.extra = extra;\n\n        //visibility가 true가 되면 webview onLoaded가 실행됨        \n        this.setState(\n            {\n                visibility: true,\n                script: 'if(BootPay == undefined || BootPay.request == undefined) {return;} BootPay.request(' + JSON.stringify(payload) + ')',\n                firstLoad: false \n            }\n        ) \n        UserInfo.updateInfo();\n    }\n\n    dismiss = () => {\n        this.setState(\n            ({ visibility }) => ({\n                visibility: false\n            })\n        )\n        this.removePaymentWindow();\n    }\n\n    // uri: 'https://inapp.bootpay.co.kr/3.3.1/production.html'\n\n    onLoadEnd = async (e) => { \n\n        if(this.state.firstLoad == true) return;\n        this.setBootpayPlatform();\n        await this.setAnalyticsData();    \n        this.goBootpayRequest();\n\n        this.setState({\n            ...this,\n            firstLoad: true \n        })\n    }\n\n\n    generateScript= (script) => {\n        const onError = '.error(function(data){ window.ReactNativeWebView.postMessage( JSON.stringify(data) ); })';\n        const onCancel = '.cancel(function(data){ window.ReactNativeWebView.postMessage( JSON.stringify(data) ); })';\n        const onReady = '.ready(function(data){ window.ReactNativeWebView.postMessage( JSON.stringify(data) ); })';\n        const onConfirm = '.confirm(function(data){ window.ReactNativeWebView.postMessage( JSON.stringify(data) ); })';\n        const onClose = '.close(function(data){ window.ReactNativeWebView.postMessage(\"close\"); })';\n        \n\n        return script + onError + onCancel + onReady + onConfirm + onClose + '; void(0);';\n    }\n\n    onMessage = ({ nativeEvent }) => {\n        if (nativeEvent == undefined || nativeEvent.data == undefined) return;\n\n        if(nativeEvent.data == 'close') {\n            if(this.props.onClose == undefined) return;\n            json = {\n                action: 'BootpayClose',\n                message: '결제창이 닫혔습니다'\n            }\n            this.props.onClose(json);\n            this.dismiss();\n            return;\n        }\n\n        const data = JSON.parse(nativeEvent.data);  \n        switch (data.action) {\n            case 'BootpayCancel':\n                if(this.props.onCancel != undefined) this.props.onCancel(data);\n                break;\n            case 'BootpayError':\n                if(this.props.onError != undefined) this.props.onError(data);\n                break;\n            case 'BootpayBankReady':\n                if(this.props.onReady != undefined) this.props.onReady(data);\n                break;\n            case 'BootpayConfirm':\n                if(this.props.onConfirm != undefined) this.props.onConfirm(data);\n                break;\n            case 'BootpayDone':\n                if(this.props.onDone != undefined) this.props.onDone(data);\n                break; \n        } \n    }\n\n    onShouldStartLoadWithRequest = (url) => { \n        return true;\n        // goBootpayRequest();\n    }\n\n    setBootpayPlatform = () => {\n        if(Platform.OS == 'ios') {\n            this.injectJavaScript(`\n  BootPay.setDevice('IOS');\n          `);\n        } else if(Platform.OS == 'android'){\n            this.injectJavaScript(`\n  BootPay.setDevice('ANDROID');\n          `);\n        } \n\n    }\n\n    goBootpayRequest = () => {\n        const fullScript = this.generateScript(this.state.script); \n        this.injectJavaScript(fullScript);\n    }\n\n    transactionConfirm = (data) => {\n        this.injectJavaScript(`\n        var data = JSON.parse(${data}); \n        BootPay.transactionConfirm(data);\n          `);\n    }\n\n    removePaymentWindow = () => {\n        this.injectJavaScript(`\n        BootPay.removePaymentWindow();\n          `);\n    }\n\n    injectJavaScript = (script) => {\n        if(this.wv == null || this.wv == undefined) return;\n        this.wv.injectJavaScript(`\n        javascript:(function(){${script} })()\n          `); \n    }\n\n    setAnalyticsData = async () => {\n        const uuid = await UserInfo.getBootpayUUID();\n        const bootpaySK = await UserInfo.getBootpaySK();\n        const bootLastTime = await UserInfo.getBootpayLastTime();\n \n\n        const elaspedTime = Date.now() - bootLastTime;\n        this.injectJavaScript(` \n        window.BootPay.setAnalyticsData({uuid:'${uuid}',sk:'${bootpaySK}',sk_time:${bootLastTime},time:${elaspedTime}});\n        `); \n    }\n}\n\n// BootpayWebView.prototype = "]}